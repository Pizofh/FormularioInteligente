from rest_framework import serializers
from .models import (
    PersonalData, FamilyData, Child, Sibling,
    AcademicInformation,
    AssetsIncomeAEP, LegalSituation, DocumentoGenerado
)

"""
serializers.py

This module defines the serializers for all models related to the recruitment form.
Serializers allow transforming model instances into formats like JSON and vice versa,
facilitating communication with REST APIs.

Each serializer class uses Django REST Framework's `ModelSerializer`, which automates
the mapping between model fields and their serialized representation.

Defined serializers:

- ChildSerializer / SiblingSerializer:
    Serialize the family relationships of the PersonalData model.

- FamilyDataSerializer:
    Includes Child and Sibling as read-only nested relationships.

- AssetsIncomeAEPSerializer:
    Serializes asset and income information related to PersonalData.

- LegalSituationSerializer:
    Serializes the applicant's legal or disciplinary background.

- DocumentoGeneradoSerializer:
    Serializes the documents automatically generated by the system.

- PersonalDataSerializer:
    Main serializer that includes all related models as read-only nested relationships.
    Useful for retrieving a full profile of PersonalData in a single request.
"""

class ChildSerializer(serializers.ModelSerializer):
    class Meta:
        model = Child
        fields = '__all__'


class SiblingSerializer(serializers.ModelSerializer):
    class Meta:
        model = Sibling
        fields = '__all__'


class FamilyDataSerializer(serializers.ModelSerializer):
    Child = ChildSerializer(many=True, read_only=True)
    Sibling = SiblingSerializer(many=True, read_only=True)

    class Meta:
        model = FamilyData
        fields = '__all__'


class AcademicInformationSerializer(serializers.ModelSerializer):
    class Meta:
        model = AcademicInformation
        fields = '__all__'


class AssetsIncomeAEPSerializer(serializers.ModelSerializer):
    class Meta:
        model = AssetsIncomeAEP
        fields = '__all__'


class LegalSituationSerializer(serializers.ModelSerializer):
    class Meta:
        model = LegalSituation
        fields = '__all__'


class DocumentoGeneradoSerializer(serializers.ModelSerializer):
    class Meta:
        model = DocumentoGenerado
        fields = '__all__'


class PersonalDataSerializer(serializers.ModelSerializer):
    FamilyData = FamilyDataSerializer(read_only=True)
    AcademicInformation = AcademicInformationSerializer(many=True, read_only=True)
    AssetsIncomeAEP = AssetsIncomeAEPSerializer(many=True, read_only=True)
    LegalSituation = LegalSituationSerializer(many=True, read_only=True)
    documentogenerado_set = DocumentoGeneradoSerializer(many=True, read_only=True)

    class Meta:
        model = PersonalData
        fields = '__all__'
